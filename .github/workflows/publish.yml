name: publish

env:
  NODE_VERSION: 18.x
  NPM_REGISTRY: 'https://registry.npmjs.org'

on:
  push:
    tags:
      - v*

jobs:
  pack:
    name: Pack (main)
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Pack
        uses: neon-actions/pack@v0.0.5
        with:
          dir: dist
          node-version: ${{ env.NODE_VERSION }}
          github-release: true

  macos-builds:
    name: Builds (macOS)
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - name: Build
        uses: neon-actions/build@v0.0.2
        with:
          target: ${{ matrix.target }}
          node-version: ${{ env.NODE_VERSION }}
          npm-publish: false
          github-release: true

  # macos-builds:
  #   name: Builds (macOS)
  #   strategy:
  #     matrix:
  #       target: [x86_64-apple-darwin, aarch64-apple-darwin]
  #   runs-on: macos-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3
  #     - name: Install Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         cache: npm
  #     - name: Install Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: ${{ matrix.target }}
  #         override: true
  #     - name: Install Dependencies
  #       run: npm install
  #     - name: Build
  #       env:
  #         CARGO_BUILD_TARGET: ${{ matrix.target }}
  #       run: npm run build
  #     - name: Pack
  #       run: npm run pack-build -- --target ${{ matrix.target }}
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: dist/*.tgz

  # windows-builds:
  #   name: Builds (Windows)
  #   runs-on: windows-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Build
  #       uses: neon-actions/build@v1
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}
  #         npm-publish: false
  #         github-release: true

  # other-builds:
  #   name: Builds (other platforms)
  #   strategy:
  #     matrix:
  #       target: [x86_64-unknown-linux-gnu, armv7-linux-androideabi, armv7-unknown-linux-gnueabihf]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Build
  #       uses: neon-actions/build@v1
  #       with:
  #         target: ${{ matrix.target }}
  #         node-version: ${{ env.NODE_VERSION }}
  #         use-cross: true
  #         npm-publish: false
  #         github-release: true

  windows-builds:
    name: Builds (Windows)
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install Dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Pack
        run: npm run pack-build
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.tgz

  other-builds:
    name: Builds (other platforms)
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, armv7-linux-androideabi, armv7-unknown-linux-gnueabihf]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Install cross-rs
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cross
      - name: Install Dependencies
        run: npm install
      - name: Cross-Compile
        env:
          CARGO_BUILD_TARGET: ${{ matrix.target }}
        run: npm run cross
      - name: Pack
        run: npm run pack-build -- --target ${{ matrix.target }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*.tgz

  publish:
    name: Publish
    needs: [pack, macos-builds, windows-builds, other-builds]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Publish
        uses: neon-actions/publish@v0.0.2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        with:
          dir: dist
          node-version: ${{ env.NODE_VERSION }}
          registry-url: ${{ env.NPM_REGISTRY }}
          github-release: "*.tgz"
